<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 注解方式，指定bean可能出现的位置      即扫描bean包 -->
	<context:component-scan base-package="com.yc.weibo" />
	
	<bean id="adminBiz" class="com.yc.weibo.bizImpl.adminBizImpl"></bean>
	<bean id="userTagBiz" class="com.yc.weibo.bizImpl.UserTagBizImpl"></bean>
	
	<!-- 引入外部属性文件 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
		p:username="${jdbc.username}" p:password="${jdbc.password}" 
		p:initialSize="${jdbc.initialSize}" p:minIdle="${jdbc.minIdle}" p:maxTotal="${jdbc.maxTotal}" />

	<!-- 配制mybatis的会话工厂对象 --><!-- 也就是mybatis和spring整合框架 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource" 
		p:typeAliasesPackage="com.yc.weibo.entity"      
		p:mapperLocations="classpath:mapper/*Mapper.xml" />

	<!-- 配制映射接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:sqlSessionFactoryBeanName="sqlSessionFactory" p:basePackage="com.yc.weibo.mapper" />

	<!--邮件发送处理bean  -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.smtp.host}"></property>
		<property name="username" value="${mail.smtp.username}"></property>
		<property name="password" value="${mail.smtp.password}"></property>
		<property name="javaMailProperties" >
			<props>
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
			</props>
		</property>
	</bean>

	<!-- 响应处理，视图处理器配置 -->
	<!-- 请求拦截后，交给对应请求处理操作后，根据返回结果，拼接响应页面路径 -->
	<!--   prefix  +  返回值    +   suffix -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/front/page/"/>
		<property name="suffix" value=".jsp"/>
	</bean>	
	
	
	<!-- 	取消所有请求拦截的重定向拦截 -->
	<!-- 默认静态资源的请求处理 -->
	<mvc:default-servlet-handler/>

	<!-- 控制器驱动处理 --> <!-- 同时要注意这个可以配置我们自己的数据转换 -->
	<mvc:annotation-driven />
	
	<!-- 1.配制事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
		
	<!-- 2.配制事务关联
	<tx:annotation-driven transaction-manager="transactionManager" /> -->
</beans>